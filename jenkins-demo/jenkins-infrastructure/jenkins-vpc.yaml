AWSTemplateFormatVersion: '2010-09-09'

Description: Standard VPC for Jenkins deployment

Parameters:
  VpcCidr:
    Type: String
    Description: Specify the VPC cidr (max=/16 min=/22)
    AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/([1][6-9]|[2][0-2])"
    ConstraintDescription: Must be a valid IP cidr range between /16 and /22 and in the 0.0.0.0/0 format
  TransitGatewayId:
    Type: String
    Description: Provide the Transit Gateway ID to use.
    Default: ''
  TransitGatewayCidr:
    Type: String
    Description: Specify the cidr range for all networks routable by the Transit Gateway
    Default: 10.0.0.0/16

Conditions:
  TgwIdNull: !Equals [!Ref TransitGatewayId, '']
  TgwExists: !Not [Condition: TgwIdNull]

Resources:
  VPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: !Ref VpcCidr
      EnableDnsSupport: 'true'
      EnableDnsHostnames: 'true'
      Tags:
        - Key: Name
          Value: jenkins-vpc

  InternetGateway:
    Type: AWS::EC2::InternetGateway
    Properties:
      Tags:
        - Key: Name
          Value: jenkins-igw

  VPCGatewayAttachment:
    Type: AWS::EC2::VPCGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      InternetGatewayId: !Ref InternetGateway

  NgwEipA:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: jenkins-ngw-a

  NgwEipB:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: jenkins-ngw-b

  NgwEipC:
    Type: AWS::EC2::EIP
    Properties:
      Domain: vpc
      Tags:
        - Key: Name
          Value: jenkins-ngw-c

  NatGatewayA:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NgwEipA.AllocationId
      ConnectivityType: public
      SubnetId: !Ref PublicSubnetA
      Tags:
        - Key: Name
          Value: jenkins-ngw-a

  NatGatewayB:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NgwEipB.AllocationId
      ConnectivityType: public
      SubnetId: !Ref PublicSubnetB
      Tags:
        - Key: Name
          Value: jenkins-ngw-b

  NatGatewayC:
    Type: AWS::EC2::NatGateway
    Properties:
      AllocationId: !GetAtt NgwEipC.AllocationId
      ConnectivityType: public
      SubnetId: !Ref PublicSubnetC
      Tags:
        - Key: Name
          Value: jenkins-ngw-c

  RouteTablePublic:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: jenkins-rtb-public

  RouteTablePrivateA:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: jenkins-rtb-private-a

  RouteTablePrivateB:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: jenkins-rtb-private-b

  RouteTablePrivateC:
    Type: AWS::EC2::RouteTable
    Properties:
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: jenkins-rtb-private-c

  SubnetRoutePublic:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePublic
      DestinationCidrBlock: 0.0.0.0/0
      GatewayId: !Ref InternetGateway

  SubnetRoutePrivateADefault:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivateA
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayA

  SubnetRoutePrivateBDefault:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivateB
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayB

  SubnetRoutePrivateCDefault:
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivateC
      DestinationCidrBlock: 0.0.0.0/0
      NatGatewayId: !Ref NatGatewayC

  PublicSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Select [0, !Cidr [!GetAtt VPC.CidrBlock, 6, 7]]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: jenkins-subnet-public-a

  PublicSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Select [1, !Cidr [!GetAtt VPC.CidrBlock, 6, 7]]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: jenkins-subnet-public-b

  PublicSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Select [2, !Cidr [!GetAtt VPC.CidrBlock, 6, 7]]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: jenkins-subnet-public-c

  PrivateSubnetA:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [0, !GetAZs '']
      CidrBlock: !Select [3, !Cidr [!GetAtt VPC.CidrBlock, 6, 7]]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: jenkins-subnet-private-a

  PrivateSubnetB:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [1, !GetAZs '']
      CidrBlock: !Select [4, !Cidr [!GetAtt VPC.CidrBlock, 6, 7]]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: jenkins-subnet-private-b

  PrivateSubnetC:
    Type: AWS::EC2::Subnet
    Properties:
      AvailabilityZone: !Select [2, !GetAZs '']
      CidrBlock: !Select [5, !Cidr [!GetAtt VPC.CidrBlock, 6, 7]]
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
      Tags:
        - Key: Name
          Value: jenkins-subnet-private-c

  SubnetRouteTableAssociationPublicA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetA
      RouteTableId: !Ref RouteTablePublic

  SubnetRouteTableAssociationPublicB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetB
      RouteTableId: !Ref RouteTablePublic

  SubnetRouteTableAssociationPublicC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PublicSubnetC
      RouteTableId: !Ref RouteTablePublic

  SubnetRouteTableAssociationPrivateA:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetA
      RouteTableId: !Ref RouteTablePrivateA

  SubnetRouteTableAssociationPrivateB:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetB
      RouteTableId: !Ref RouteTablePrivateB

  SubnetRouteTableAssociationPrivateC:
    Type: AWS::EC2::SubnetRouteTableAssociation
    Properties:
      SubnetId: !Ref PrivateSubnetC
      RouteTableId: !Ref RouteTablePrivateC

  TransitGatewayAttachment:
    Condition: TgwExists
    Type: AWS::EC2::TransitGatewayAttachment
    Properties:
      VpcId: !Ref VPC
      TransitGatewayId: !Ref TransitGatewayId
      SubnetIds:
        - !Ref PrivateSubnetA
        - !Ref PrivateSubnetB
        - !Ref PrivateSubnetC

  SubnetRoutePrivateATgw:
    Condition: TgwExists
    DependsOn: [TransitGatewayAttachment]
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivateA
      DestinationCidrBlock: !Ref TransitGatewayCidr
      TransitGatewayId: !Ref TransitGatewayId

  SubnetRoutePrivateBTgw:
    Condition: TgwExists
    DependsOn: [TransitGatewayAttachment]
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivateB
      DestinationCidrBlock: !Ref TransitGatewayCidr
      TransitGatewayId: !Ref TransitGatewayId

  SubnetRoutePrivateCTgw:
    Condition: TgwExists
    DependsOn: [TransitGatewayAttachment]
    Type: AWS::EC2::Route
    Properties:
      RouteTableId: !Ref RouteTablePrivateC
      DestinationCidrBlock: !Ref TransitGatewayCidr
      TransitGatewayId: !Ref TransitGatewayId

Outputs:
  VpcId:
    Value: !Ref VPC
    Export:
      Name: 'jenkins-vpc-id'
  VpcCidr:
    Value: !Ref VpcCidr
    Export:
      Name: 'jenkins-vpc-cidr'
  PublicSubnetA:
    Value: !Ref PublicSubnetA
    Export:
      Name: 'jenkins-subnet-public-a'
  PublicSubnetB:
    Value: !Ref PublicSubnetB
    Export:
      Name: 'jenkins-subnet-public-b'
  PublicSubnetC:
    Value: !Ref PublicSubnetC
    Export:
      Name: 'jenkins-subnet-public-c'
  PrivateSubnetA:
    Value: !Ref PrivateSubnetA
    Export:
      Name: 'jenkins-subnet-private-a'
  PrivateSubnetB:
    Value: !Ref PrivateSubnetB
    Export:
      Name: 'jenkins-subnet-private-b'
  PrivateSubnetC:
    Value: !Ref PrivateSubnetC
    Export:
      Name: 'jenkins-subnet-private-c'
  TransitGatewayId:
    Condition: TgwExists
    Value: !Ref TransitGatewayId
    Export:
      Name: 'jenkins-tgw-id'
