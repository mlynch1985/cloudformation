AWSTemplateFormatVersion: '2010-09-09'

Description: This template will deploy a sample Microsoft Active Directory environment and launch a Windows Server 2019 EC2 instance joined to the domain.  Additionally, we will install the latest CloudWatch Server Agent.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VpcId
          - PrimarySubnet
          - SecondarySubnet

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select the VPC ID where we should deploy this stack
  PrimarySubnet:
    Type: AWS::EC2::Subnet::Id
    Description: Select the subnet to be used for the Primary MSAD Node
  SecondarySubnet:
    Type: AWS::EC2::Subnet::Id
    Description: Select the subnet to be used for the Secondary MSAD Node

Resources:
  KmsKey:
    #checkov:skip=CKV_AWS_33:We can use * for principal since we use Condition to limit to service
    Type: AWS::KMS::Key
    Metadata:
      cfn_nag:
        rules_to_suppress:
          - id: F76
            reason: Access is limited using Conditions section
    Properties:
      Description: This key will encrypt data stored in Secrets Manager
      EnableKeyRotation: true
      MultiRegion: false
      PendingWindowInDays: 7
      KeyPolicy:
        Version: '2012-10-17'
        Statement:
          - Sid: Enable IAM Policies
            Effect: 'Allow'
            Action:
              - 'kms:Create*'
              - 'kms:Describe*'
              - 'kms:Enable*'
              - 'kms:List*'
              - 'kms:Put*'
              - 'kms:Update*'
              - 'kms:Revoke*'
              - 'kms:Disable*'
              - 'kms:Get*'
              - 'kms:Delete*'
              - 'kms:TagResource'
              - 'kms:UntagResource'
              - 'kms:ScheduleKeyDeletion'
              - 'kms:CancelKeyDeletion'
            Resource: '*'
            Principal:
              AWS: !Sub 'arn:${AWS::Partition}:iam::${AWS::AccountId}:root'
          - Sid: Enable Secrets Manager
            Effect: 'Allow'
            Action:
              - kms:Encrypt*
              - kms:Decrypt*
              - kms:ReEncrypt*
              - kms:GenerateDataKey*
              - kms:Describe*
              - kms:CreateGrant
            Resource: '*'
            Principal:
              AWS: '*'
            Condition:
              StringEquals:
                kms:ViaService: !Sub 'secretsmanager.${AWS::Region}.${AWS::URLSuffix}'
                kms:CallerAccount: !Ref AWS::AccountId

  MSADSecret:
    Type: AWS::SecretsManager::Secret
    UpdateReplacePolicy: Delete
    DeletionPolicy: Delete
    Properties:
      KmsKeyId: !GetAtt KmsKey.Arn
      Name: !Sub '${AWS::StackName}-MSAD-RootCredentials'
      Description: 'Sample Active Directory Root Credentials'
      GenerateSecretString:
        ExcludePunctuation: true
        PasswordLength: 64

  MicrosoftAD:
    Type: AWS::DirectoryService::MicrosoftAD
    Properties:
      Edition: Enterprise
      EnableSso: false
      Name: corp.example.com
      Password: !Sub '{{resolve:secretsmanager:${MSADSecret}:SecretString}}'
      ShortName: CORP
      VpcSettings:
        VpcId: !Ref VpcId
        SubnetIds:
          - !Ref PrimarySubnet
          - !Ref SecondarySubnet

Outputs:
  MSADId:
    Value: !Ref MicrosoftAD
    Description: The Logical ID of the Microsoft Active Directory Resource

  DNSServers:
    Value: !Join [', ', !GetAtt MicrosoftAD.DnsIpAddresses]
    Description: The associated DNS Server IP addresses for our Microsoft Active Directory Resource
