AWSTemplateFormatVersion: '2010-09-09'

Description: This template will deploy a sample Linux HTTPD site hosted in an AutoScaling Group.

Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: Network Configuration
        Parameters:
          - VpcId
          - PublicSubnets
          - PrivateSubnets
          - ElbCidr
      - Label:
          default: Linux ASG Configuration
        Parameters:
          - AmiId
          - InstanceType
          - AsgDesired
          - AsgMin
          - AsgMax

Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Select the VPC ID where we should deploy this stack
  PublicSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select the Public facing Subnets for the ELB
  PrivateSubnets:
    Type: List<AWS::EC2::Subnet::Id>
    Description: Select the Private facing Subnets for the Linux ASG
  ElbCidr:
    Type: String
    Description: Provide a CIDR to allow source traffic to the ELB
    AllowedPattern: (\d{1,3})\.(\d{1,3})\.(\d{1,3})\.(\d{1,3})/(\d{1,2})
    Default: 172.31.0.0/16
  AmiId:
    Type: AWS::SSM::Parameter::Value<AWS::EC2::Image::Id>
    Description: Provide the SSM Parameter path to a valid AMI ID
    Default: /aws/service/ami-amazon-linux-latest/amzn2-ami-hvm-x86_64-gp2
  InstanceType:
    Type: String
    Description: Select the EC2 Instance Size for the Linux ASG Instances
    Default: t3.small
    AllowedValues:
      - t3.small
      - t3.medium
      - t3.large
      - t3.xlarge
      - m5.large
      - m5.xlarge
      - m5.2xlarge
      - m5.4xlarge
      - c5.large
      - c5.xlarge
      - c5.2xlarge
      - c5.4xlarge
      - c5.9xlarge
  AsgDesired:
    Type: Number
    Description: Specify the number of instances to launch by default
    MinValue: 1
    MaxValue: 10
    Default: 3
  AsgMin:
    Type: Number
    Description: Specify the minimum number of instances to launch
    MinValue: 1
    MaxValue: 10
    Default: 1
  AsgMax:
    Type: Number
    Description: Specify the maximum number of instances to launch
    MinValue: 1
    MaxValue: 10
    Default: 6

Resources:
  IamRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${AWS::StackName}-EC2-ApacheHttpd'
      Description: This role will grant EC2 access to communicate with Systems Manager and CloudWatch
      MaxSessionDuration: 3600
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonSSMManagedInstanceCore
        - arn:aws:iam::aws:policy/CloudWatchAgentServerPolicy

  InstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub '${AWS::StackName}-EC2-ApacheHttpd'
      Roles:
        - !Ref IamRole

  ELBSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: !Sub 'This group will allow HTTP access to the Elastic Load Balancer from ${ElbCidr}'
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: !Ref ElbCidr
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-ELB-ApacheHttpd'

  EC2SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: This group will allow HTTP access to the EC2 Instances from the Load Balancer
      VpcId: !Ref VpcId
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          SourceSecurityGroupId: !Ref ELBSecurityGroup
      SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0
      Tags:
        - Key: Name
          Value: !Sub '${AWS::StackName}-LinuxASG-ApacheHttpd'

  ElasticLoadBalancer:
    Type: AWS::ElasticLoadBalancingV2::LoadBalancer
    Properties:
      Name: !Sub '${AWS::StackName}-ApacheHttpd'
      Scheme: internet-facing
      SecurityGroups:
        - !Ref ELBSecurityGroup
      Subnets: !Ref PublicSubnets

  TargetGroup:
    Type: AWS::ElasticLoadBalancingV2::TargetGroup
    Properties:
      Name: !Sub '${AWS::StackName}-ApacheHttpd'
      VpcId: !Ref VpcId
      Protocol: HTTP
      Port: 80
      TargetType: instance
      HealthCheckIntervalSeconds: 30
      HealthCheckPath: /
      HealthCheckPort: '80'
      HealthCheckProtocol: HTTP
      HealthCheckTimeoutSeconds: 5
      HealthyThresholdCount: 3
      UnhealthyThresholdCount: 2

  ELBListener:
    Type: AWS::ElasticLoadBalancingV2::Listener
    Properties:
      LoadBalancerArn: !Ref ElasticLoadBalancer
      Protocol: HTTP
      Port: 80
      DefaultActions:
        - Type: forward
          TargetGroupArn: !Ref TargetGroup

  LaunchTemplate:
    Type: AWS::EC2::LaunchTemplate
    Properties:
      LaunchTemplateName: !Sub '${AWS::StackName}-LinuxASG-ApacheHttpd'
      LaunchTemplateData:
        IamInstanceProfile:
          Name: !Ref InstanceProfile
        ImageId: !Ref AmiId
        InstanceType: !Ref InstanceType
        SecurityGroupIds:
          - !Ref EC2SecurityGroup
        UserData: !Base64 |
          #!/bin/bash
          yum update -y
          yum install httpd -y
          service httpd start
          chkconfig httpd on
          echo "Hello World from $(hostname -f)" > /var/www/html/index.html

  AutoScalingGroup:
    Type: AWS::AutoScaling::AutoScalingGroup
    Properties:
      AutoScalingGroupName: !Sub '${AWS::StackName}-LinuxASG-ApacheHttpd'
      HealthCheckGracePeriod: 180
      HealthCheckType: ELB
      LaunchTemplate:
        LaunchTemplateId: !Ref LaunchTemplate
        Version: !GetAtt LaunchTemplate.LatestVersionNumber
      DesiredCapacity: !Ref AsgDesired
      MinSize: !Ref AsgMin
      MaxSize: !Ref AsgMax
      TargetGroupARNs:
        - !Ref TargetGroup
      VPCZoneIdentifier: !Ref PrivateSubnets
      Tags:
        - Key: 'Name'
          Value: !Sub '${AWS::StackName}-LinuxASG-ApacheHttpd'
          PropagateAtLaunch: true

  AutoScalingPolicy:
    Type: AWS::AutoScaling::ScalingPolicy
    Properties:
      AutoScalingGroupName: !Ref AutoScalingGroup
      PolicyType: TargetTrackingScaling
      TargetTrackingConfiguration:
        DisableScaleIn: false
        PredefinedMetricSpecification:
          PredefinedMetricType: ASGAverageCPUUtilization
        TargetValue: 80

Outputs:
  LinuxSiteUrl:
    Value: !GetAtt ElasticLoadBalancer.DNSName
    Description: Public facing url of our sample website
